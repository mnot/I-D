<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd" [
   <!ENTITY rfc2119 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>  
   <!ENTITY rfc2616 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2616.xml'>  
   <!ENTITY rfc4627 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.4627.xml'>  
   <!ENTITY rfc5226 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5226.xml'>  
   <!ENTITY rfc5246 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml'>  
   <!ENTITY rfc5785 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5785.xml'>  
   <!ENTITY rfc6265 SYSTEM 'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6265.xml'>  
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes" ?>
<?rfc tocdepth="3" ?>
<?rfc tocindent="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="yes" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes" ?>

<rfc ipr="trust200902" docName="draft-nottingham-http-browser-hints-05" category="info">

   <front>
      <title>Hints for HTTP Browsers</title>
      <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
         <organization></organization>
         <address>       
            <email>mnot@mnot.net</email> 
            <uri>http://www.mnot.net/</uri>
         </address>
      </author>
      <date year="2012"/>
      <abstract>

         <t>Over time, HTTP clients -- especially Web browsers -- have adapted
         how they use the protocol based upon common server configurations and
         behaviours. While this is necessary in the common case, it can be
         detrimental for performance and interoperability.</t>

         <t>This document establishes a mechanism whereby both origin servers
         and intermediaries can make available hints for clients about their
         preferences and capabilities, without imposing overhead on their
         interactions or requiring support for them.</t>

         <t>This is intended to allow clients to safely optimise connections
         to servers.</t>

      </abstract>
      
      <note title="Note to Readers">
          <t>Feedback for this draft should take place on the
          apps-discuss@ietf.org mailing list <eref
          target="https://www.ietf.org/mailman/listinfo/apps-discuss"/>. </t>
      </note>
   </front>

   <middle>

      <section title="Introduction">

        <t>HTTP <xref target="RFC2616"/> clients -- especially browsers --
        typically use hardcoded values or heuristics to determine how they use
        TCP, based on common-case server behaviours and limitations.</t>

        <t>Likewise, they often send voluminous request headers (e.g., in
        User-Agent and Allow) because they fear that changing those headers'
        values will break some sites that depend upon specific values.</t>

        <t>These conservative behaviours are good for interoperability, but
        potentially bad for performance in certain circumstances.</t>

        <t>This document specifies a mechanism whereby a HTTP server can
        advertise hints for browsers and other clients, so that
        communication with them can be optimised.</t>

        <t>It does so by defining two headers; "OH" (Origin Hints) for
        end-to-end hints from the Origin Server, and "HH" (Hop Hints) for
        hop-by-hop hints from the upstream server (origin or proxy). A
        selection of hints are also defined in this document, and a registry
        is defined to allow future such hints.</t>

      </section>

      <section title="Requirements">
         <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
         NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in
         this document are to be interpreted as described in <xref
         target="RFC2119"/>.</t>
      </section>

      <section title="Origin Hints">
        <t>Origin Hints are applicable to all requests to the origin
        associated with the response, until they are overridden.</t>
        
        <t>A hint is considered overridden when an OH header field is seen 
          from the same origin that does not contain the hint, or contains
          a different value for the hint.</t>
          
        <t>Practically speaking, this means that clients MAY cache origin
          hint values indefinitely, updating them when new OH header fields
          are seen from an origin.</t>
          
        For example, if a response is seen with and OH field value of "abc",
        any existing hints associated with that origin will be removed, and
        that value will persist (in relation to that origin) until another
        
      </section>
      
      <section title="Hop Hints">
        <t>Hop Hints are applicable to all requests on the TCP connection they
        occur upon, until they are overridden.</t>
        
        <t>The HH header field MUST be listed in the Connection header's
        field-value.</t>
      </section>

      <section title="Hint Syntax">
        
        <t>Both origin hints and hop hints share a common syntax, consisting
          of a string of alphanumeric characters. This form is designed to
          be compact without sacrificing readability.</t>
          
        <t>Every hint has a alphabetical, case-sensitive hint identifier.</t>
        
        hint-group = *hint
        hint = ALPHA *[ DIGIT ]
        
        <t>All hints' values are one of two types:
          
          <list style="symbols">
            <t>Boolean - indicated by the presence of the hint identifier.
              If the hint identifier is absent, it is considered false.</t>
            <t>Numeric - value indicated by the digits after the hint
            identifer, up to the first non-digit character.</t>
          </list>
      </section></t>
      
      <t>For example:</t>
      
      aS42eu9
      
      <t>contains the following hint identifiers, with the corresponding
      values:
      
      <list style="symbols">
        <t>a - true</t>
        <t>S - 42</t>
        <t>e - true</t>
        <t>u - 9</t>
      </list></t>

    </section>
    
    <section title="Pre-defined Origin Hints" anchor="origin-hints">

      <section title="Small Request Headers">

        <t>
          <list style="symbols">
            <t>Origin Hint Identifier: s</t>
            <t>Description: When true, this hint indicates that clients
            can omit the Accept and Accept-Charset request headers when
            communicating with the server, and that they can use a 
						shortened version of the User-Agent header.</t>
            <t>Value Type: boolean</t>
            <t>Contact: mnot@mnot.net</t>
          </list>
        </t>

        <t>This hint can help reduce request sizes.</t>

      </section>
      
      <section title="Relative Referers">

        <t>
          <list style="symbols">
            <t>Origin Hint Identifier: r</t>
            <t>Description: When true, this hint indicates that servers
 							 prefer a relative URI in the Referer request header.</t>
            <t>Value Type: boolean</t>
            <t>Contact: mnot@mnot.net</t>
          </list>
        </t>
        
        <t>This hint can help reduce request sizes.</t>

      </section>
      
			<section title="Omitting Cookies">

        <t>
					<list style="symbols">
            <t>Origin Hint Identifier: c</t>
						<t>Description: When true, this hint indicates that all cookies
            <xref target="RFC6265"/> can be omitted in requests to the
            server.</t>
						<t>Value Type: boolean</t>
						<t>Contact: mnot@mnot.net</t>
					</list>
				</t>

        <t>This hint can help reduce request sizes.</t>

			</section>
			
    </section>

      <section title="Pre-defined Hop Hints" anchor="hop-hints">
                
        <section title="pconn-ip">

          <t>
            <list style="symbols">
              <t>Browser Hint Name: pconn-ip</t>
              <t>Description: When true, this hint indicates that the site
              allows clients to reuse persistent connections keyed by IP
              address, rather than by hostname. Note that all sites that are 
              sharing the connection MUST declare this hint for it to be
              used, and if a transport-layer certificate is in use 
              (e.g., for TLS <xref target="RFC5246"/>), it MUST be valid 
              for all sites.</t>
              <t>Value Type: true | false</t>
              <t>Contact: mnot@mnot.net</t>
              <t>Specification: [this document]</t>
              <t>Notes: Not to be used when there is evidence of a proxy.</t>
            </list>
          </t>

          <t>In other words, if both www.example.com and foo.example.org
          resolve to the address 192.0.2.5, and indicate this hint, then
          clients can send a request to www.example.com and then a request to
          foo.example.org on the same TCP connection to that address.</t>
            
          <t>If any of the sites grouped together for the purposes of pconn-ip
          declare a max-conns hint, the max-conns value for that address is
          considered to be the maximum of the declared max-conn hints
          present.</t>

        </section>
        
        <section title="max-pipeline-depth">

          <t>
            <list style="symbols">
              <t>Browser Hint Name: max-pipeline-depth</t>
              <t>Description: When present, this hint indicates the maximum
              number of pipelined requests per connection that the site would
              like clients to use.</t>
              <t>Value Type: number</t>
              <t>Contact: mnot@mnot.net</t>
              <t>Notes: Not to be used when there is evidence of a proxy.</t>
            </list>
          </t>

        </section>
        
      </section>
                  
      <section title="Security Considerations">
         <t>TBD</t>
      </section>

      <section title="IANA Considerations">
            
       <section title="The BH HTTP Response Header Field">
         
         <t>This document defines the "BH" HTTP header field, and registers
           it in the Permanent Message Headers registry.</t>
           
         <t><list style="symbols">
           <t>Header field name: BH</t>
           <t>Applicable protocol: HTTP</t>
           <t>Status: Informational</t>
           <t>Author/Change controller: Mark Nottingham, mnot@mnot.net</t>
           <t>Specification document(s): [this document]</t>
           <t>Related information: </t>
         </list></t>
         
       </section>
      
       <section title="The HTTP Browser Hints Registry" anchor="registry">
      
       <t>This document establishes the HTTP Browser Hints Registry.</t>
       
       <t>New hints are registered First Come First Served (see 
         <xref target="RFC5226"/>), by sending e-mail to <eref 
         target="mailto:iana@iana.org"/> (or using other mechanisms, as
         established by IANA).</t>
         
       <t>Registration requests MUST use the following template:</t>
       
       <t>
          <list style="symbols">
            <t>Browser Hint Name: [name of hint]</t>
            <t>Description: [description of hint]</t>
            <t>Value Type: [JSON value type] </t>
	          <t>Contact: [e-mail address(es)]</t>
	          <t>Specification: [optional; reference or URI to more info]</t>
	          <t>Notes: [optional]</t>
          </list>
        </t>
      
       <t>New hints MUST be optional; they cannot place requirements upon
       implementations.</t>
       
       <t>Likewise, new hints MUST be relevant to browser use
       cases; other non-browsing hints and metadata would make the hints
       response undesirably large. However, note that non-browser clients
       MAY use them.</t>
       
       <t>Finally, new hints MUST NOT make communication non-conformant with
         HTTP itself; i.e., this is not a mechanism for changing the HTTP
         protocol in incompatible ways. For example, if a hint indicates
         that browsers can compress request headers using GZIP, intermediaries
         that are interposed are likely to fail.</t>
      
       <t>The initial contents of the registry are defined in
         <xref target="hints"/>.</t>
      
       </section>

     </section>

   </middle>

   <back>
      <references title="Normative References">
         &rfc2119; &rfc2616; &rfc4627;
      </references>

      <references title="Informative References">
         &rfc5226; &rfc5246; &rfc5785; &rfc6265;
      </references>
      
      <section title="Acknowledgements">
         <t>Thanks to 
           Mike Belshe,
           Artur Bergman,
           William Chan,
           Jason Duell,
           Poul-Henning Kamp,
           Anirban Kundu,
           Patrick McManus,
           Ryan Sleevi,
           Steve Souders, and
			     Martin Thompson
           for their suggestions and feedback.           
          </t>
         <t>The author takes all responsibility for errors and
         omissions.</t>
      </section>
      
   </back>

</rfc>
